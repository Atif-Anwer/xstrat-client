<Application x:Class="xstrat.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:xstrat"
             xmlns:viewModel="clr-namespace:xstrat.MVVM.ViewModel"
             xmlns:view="clr-namespace:xstrat.MVVM.View" xmlns:s="clr-namespace:XStrat"
             StartupUri="MainWindow.xaml"             
             >
    
    <Application.Resources>
        <ResourceDictionary>
            
            <!--MVVM-->
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Ui/MenuButtonTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type viewModel:HomeViewModel}">
                <view:HomeView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:SettingsViewModel}">
                <view:SettingsView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:AboutViewModel}">
                <view:AboutView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:SkinSwitcherViewModel}">
                <view:SkinSwitcherView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:RoutinesViewModel}">
                <view:RoutinesView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:StratMakerViewModel}">
                <view:StratMakerView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:TeamViewModel}">
                <view:TeamView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:CalendarViewModel}">
                <view:CalendarView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:ScrimViewModel}">
                <view:ScrimView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:StatsViewModel}">
                <view:StatsView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:LicenseViewModel}">
                <view:LicenseView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:LoadingViewModel}">
                <view:LoadingView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:WallEditorViewModel}">
                <view:WallEditorView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:ReplayViewModel}">
                <view:ReplayView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:OffdayViewModel}">
                <view:OffdayView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:AnalystViewModel}">
                <view:AnalystView />
            </DataTemplate>

            
            <!--XStrat Design Concept-->

            <!--Tabs-->
            <Style TargetType="TabControl">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="SelectedIndex" Value="0" />
            </Style>

            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Background" Value="#202020" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="10" />
                <Setter Property="FontSize" Value="16" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#336cb5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--Primary Labels-->
            <Style x:Key="PH1" TargetType="Label">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="PH2" TargetType="Label">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="P1" TargetType="Label">
                <Setter Property="Foreground" Value="#f0f0f0" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="P2" TargetType="Label">
                <Setter Property="Foreground" Value="#f0f0f0" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>

            <Style x:Key="PS" TargetType="Label">
                <Setter Property="Foreground" Value="#f0f0f0" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <!--Secondary Labels-->
            <Style x:Key="SH1" TargetType="Label">
                <Setter Property="Foreground" Value="#336cb5" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="SH2" TargetType="Label">
                <Setter Property="Foreground" Value="#336cb5" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="S1" TargetType="Label">
                <Setter Property="Foreground" Value="#336cb5" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="S2" TargetType="Label">
                <Setter Property="Foreground" Value="#336cb5" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            
            <!--Borders-->

            <Style x:Key="Area" TargetType="Border">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="#161616" />
                <Setter Property="Margin" Value="10" />
                <Setter Property="CornerRadius" Value="10" />
            </Style>
            
            <Style x:Key="Control" TargetType="Border">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="#202020" />
                <Setter Property="Margin" Value="10" />
                <Setter Property="CornerRadius" Value="10" />
            </Style>
            
            <!--Buttons-->

            <Style x:Key="Primary" TargetType="Button">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Background" Value="#282828" />
                <Setter Property="Margin" Value="10" />
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="10"></Setter>
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="Secondary" TargetType="Button">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Background" Value="#336cb5" />
                <Setter Property="Margin" Value="10" />
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="10"></Setter>
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="Small" TargetType="Button">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Background" Value="#282828" />
                <Setter Property="Margin" Value="10" />
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"></Setter>
                        <Setter Property="BorderThickness" Value="0"></Setter>
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="DataGridSmall" TargetType="Button">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Background" Value="#336cb5" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="IsEnabled" Value="True" />
                <!-- add new setter for IsEnabled -->
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"></Setter>
                    </Style>
                </Style.Resources>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#202020" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!--TextBoxes-->
            
            <Style x:Key="PrimaryTB" TargetType="TextBox">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="#202020" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>

            <Style x:Key="SecondaryTB" TargetType="TextBox">
                <Setter Property="Foreground" Value="#336cb5" />
                <Setter Property="Background" Value="#202020" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>

            <!--Menu item-->

            <!--// Menu with SubMenu Template //-->

            <ControlTemplate x:Key="Menu_SubMenu_Template" TargetType="{x:Type MenuItem}">

                <Border x:Name="border" Background="#303030" BorderBrush="#202020" BorderThickness="0" CornerRadius="5" Margin="1" Height="30" Width="150">

                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="0" Width="0" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="8" />
                        </Grid.ColumnDefinitions>

                        <!--// Icon //-->

                        <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Left" Height="12" Width="12" Margin="10,0,0,0" VerticalAlignment="Center" />

                        <!--// Menu Text //-->

                        <ContentPresenter ContentSource="Header" Grid.Column="2" TextBlock.Foreground="White"  TextBlock.FontSize="16" HorizontalAlignment="Left" RecognizesAccessKey="True" Margin="3,0,0,0" VerticalAlignment="Center" />

                        <!--// Right Arrow Icon //-->

                        <Image Source="Assets/img_arrow.png" Stretch="None" Grid.Column="4" HorizontalAlignment="Left" VerticalAlignment="Center" />

                        <!--// Popup //-->

                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="0">

                            <Border x:Name="SubMenuBorder" Background="#303030" BorderBrush="#303030">

                                <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">

                                    <Grid RenderOptions.ClearTypeHint="Enabled">

                                        <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" />

                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" KeyboardNavigation.TabNavigation="Cycle" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>

                    </Grid>
                </Border>


                <ControlTemplate.Triggers>

                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
                    </Trigger>

                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                    </Trigger>

                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                    </Trigger>

                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Background" TargetName="border" Value="#404D5B" />
                        <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                    </Trigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--// Main Menu Template //-->

            <ControlTemplate x:Key="Menu_Template" TargetType="{x:Type MenuItem}">

                <Border x:Name="border" Background="#303030" BorderBrush="#202020" BorderThickness="0" Height="30" Width="150">

                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="0" Width="0" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="8" />
                        </Grid.ColumnDefinitions>

                        <!--// Icon //-->

                        <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Left" Height="12" Width="12" Margin="10,0,0,0" VerticalAlignment="Center" />

                        <!--// Menu Text //-->

                        <ContentPresenter ContentSource="Header" Grid.Column="2" TextBlock.Foreground="#FFFFFF" TextBlock.FontSize="14" HorizontalAlignment="Left" RecognizesAccessKey="True" Margin="3,0,0,0" VerticalAlignment="Center" />

                    </Grid>
                </Border>


                <ControlTemplate.Triggers>

                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                    </Trigger>

                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                    </Trigger>

                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Background" TargetName="border" Value="#404D5B" />
                        <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                    </Trigger>


                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--// Menu Item Template //-->

            <ControlTemplate x:Key="Item_Template" TargetType="{x:Type MenuItem}">

                <Border x:Name="border" Background="#303030" BorderBrush="#202020" BorderThickness="0" Height="30" Width="150">

                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="0" Width="0" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="8" />
                        </Grid.ColumnDefinitions>

                        <!--// Icon //-->

                        <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="12" Width="12" Margin="10,0,0,0" VerticalAlignment="Center" />

                        <!--// Menu Text //-->

                        <ContentPresenter ContentSource="Header" Grid.Column="2" TextBlock.Foreground="White" TextBlock.FontSize="14" HorizontalAlignment="Left" RecognizesAccessKey="True" Margin="1,0,0,0" VerticalAlignment="Center" />


                    </Grid>
                </Border>


                <ControlTemplate.Triggers>

                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                    </Trigger>

                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                    </Trigger>

                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Background" TargetName="border" Value="#404D5B" />
                        <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                    </Trigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>


            <!--**************************
            * STYLE: Scrollbar
            ************************** -->

            <!--Scrollbar Thumbs-->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                                <Border x:Name="Rectangle1" CornerRadius="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                    <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ScrollBars-->
            <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                                <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag"
                                Value="Horizontal">
                                    <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                                    <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
                <Setter Property="Foreground"
            Value="#656565" />
                <Setter Property="Background"
            Value="#303030" />
                <Setter Property="Width"
            Value="7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>
                                <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                                    <Setter Value="#808080"
                                TargetName="Thumb"
                                Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                                    <Setter Value="#555555"
                                TargetName="Thumb"
                                Property="Background" />
                                </Trigger>

                                <Trigger Property="IsEnabled"
                                Value="false">
                                    <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation"
                                Value="Horizontal">
                                    <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width"
                                Value="Auto" />
                                    <Setter Property="Height"
                                Value="8" />
                                    <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                                    <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--Button-->
            
            <!--<Style TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="Hand" />
                    </Trigger>
                </Style.Triggers>
            </Style>-->
            
            <!--Adoner stuff-->

            <ControlTemplate x:Key="MoveThumbTemplate"  TargetType="{x:Type s:MoveThumb}">
                <Rectangle Fill="Transparent"/>
            </ControlTemplate>


            <Style x:Key="DesignerItemStyle" TargetType="ContentControl">
                <Setter Property="MinHeight" Value="50"/>
                <Setter Property="MinWidth" Value="50"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContentControl">
                            <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <s:MoveThumb Cursor="SizeAll" Template="{StaticResource MoveThumbTemplate}" />
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                              Margin="{TemplateBinding Padding}"/>
                                <s:DesignerItemDecorator x:Name="ItemDecorator"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter TargetName="ItemDecorator" Property="ShowDecorator" Value="True"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Shape}" x:Key="ThumbCorner">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Stroke" Value="#FFC8C8C8" />
                <Setter Property="StrokeThickness" Value=".5" />
                <Setter Property="Width" Value="7" />
                <Setter Property="Height" Value="7" />
                <Setter Property="Margin" Value="-2" />
                <Setter Property="Fill">
                    <Setter.Value>
                        <RadialGradientBrush Center="0.2, 0.2" GradientOrigin="0.2, 0.2" RadiusX="0.8" RadiusY="0.8">
                            <GradientStop Color="White" Offset="0.0" />
                            <GradientStop Color="Gray" Offset="0.8" />
                        </RadialGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type s:ResizeRotateChrome}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type s:ResizeRotateChrome}">
                            <Grid>
                                <Grid Opacity="0" Margin="-3">
                                    <s:RotateThumb Width="7"
                             Height="7"
                             Margin="0,-20,0,0"
                             Cursor="Hand"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Center"/>
                                    <s:ResizeThumb Height="3"
                             Cursor="SizeNS"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Stretch"/>
                                    <s:ResizeThumb Width="3"
                             Cursor="SizeWE"
                             VerticalAlignment="Stretch"
                             HorizontalAlignment="Left"/>
                                    <s:ResizeThumb Width="3"
                             Cursor="SizeWE"
                             VerticalAlignment="Stretch"
                             HorizontalAlignment="Right"/>
                                    <s:ResizeThumb Height="3"
                             Cursor="SizeNS"
                             VerticalAlignment="Bottom"
                             HorizontalAlignment="Stretch"/>
                                    <s:ResizeThumb Width="7"
                             Height="7"
                             Margin="-2"
                             Cursor="SizeNWSE"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Left"/>
                                    <s:ResizeThumb Width="7"
                             Height="7"
                             Margin="-2"
                             Cursor="SizeNESW"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Right"/>
                                    <s:ResizeThumb Width="7"
                             Height="7"
                             Margin="-2"
                             Cursor="SizeNESW"
                             VerticalAlignment="Bottom"
                             HorizontalAlignment="Left"/>
                                    <s:ResizeThumb Width="7"
                             Height="7"
                             Margin="-2"
                             Cursor="SizeNWSE"
                             VerticalAlignment="Bottom"
                             HorizontalAlignment="Right"/>
                                </Grid>
                                <Grid IsHitTestVisible="False" Opacity="1" Margin="-3">
                                    <Rectangle SnapsToDevicePixels="True"
                         StrokeThickness="1"
                         Margin="1"
                         Stroke="White"/>
                                    <Line StrokeThickness="1" X1="0" Y1="0" X2="0" Y2="20"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Margin="0,-19,0,0"
                    Stroke="White"/>
                                    <Ellipse Style="{StaticResource ThumbCorner}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="-1,-20,0,0"/>
                                    <Ellipse Style="{StaticResource ThumbCorner}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                    <Ellipse Style="{StaticResource ThumbCorner}" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                    <Ellipse Style="{StaticResource ThumbCorner}" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                    <Ellipse Style="{StaticResource ThumbCorner}" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <s:DoubleFormatConverter x:Key="doubleFormatConverter"/>

            <Style TargetType="{x:Type s:SizeChrome}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type s:SizeChrome}">
                            <Grid SnapsToDevicePixels="True">
                                <Path Stroke="Red"
                  StrokeThickness="1"
                  Height="10"
                  VerticalAlignment="Bottom"
                  Margin="-2,0,-2,-15"
                  Stretch="Fill"
                  Data="M0,0 0,10 M 0,5 100,5 M 100,0 100,10"/>
                                <TextBlock Text="{Binding Path=Width, Converter={StaticResource doubleFormatConverter}}"
                       Background="White"
                       Padding="3,0,3,0"
                       Foreground="Red"
                       Margin="0,0,0,-18"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Bottom"/>
                                <Path Stroke="Red"
                  StrokeThickness="1"
                  Width="10"
                  HorizontalAlignment="Right"
                  Margin="0,-2,-15,-2"
                  Stretch="Fill"
                  Data="M5,0 5,100 M 0,0 10,0 M 0,100 10,100"/>
                                <TextBlock Text="{Binding Path=Height, Converter={StaticResource doubleFormatConverter}}"
                       Background="White"
                       Foreground="Red"
                       Padding="3,0,3,0"
                       Margin="0,0,-18,0"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="90" CenterX="1" CenterY="0.5"/>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--DataGrid-->
            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
                <Setter Property="Background" Value="#252526" />
                <Setter Property="Foreground" Value="#FFFFFF" />
                <Setter Property="BorderBrush" Value="#2B2B2B" />
                <Setter Property="RowBackground" Value="#2B2B2B" />
                <Setter Property="AlternatingRowBackground" Value="#252526" />
                <Setter Property="HorizontalGridLinesBrush" Value="#3C3C3C" />
                <Setter Property="VerticalGridLinesBrush" Value="#3C3C3C" />
                <Setter Property="CanUserAddRows" Value="False" />
                <Setter Property="CanUserDeleteRows" Value="False" />
                <Setter Property="HeadersVisibility" Value="Column" />
                <Setter Property="RowHeight" Value="30" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="ColumnHeaderStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Background" Value="#1E1E1E" />
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <Setter Property="BorderBrush" Value="#2B2B2B" />
                            <Setter Property="BorderThickness" Value="0,0,1,2" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="6" />
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                            <Setter Property="FontFamily" Value="Segoe UI" />
                            <Setter Property="SeparatorBrush" Value="#FFFFFF" />
                            <Setter Property="SeparatorVisibility" Value="Visible" />
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <Setter Property="BorderBrush" Value="#2B2B2B" />
                            <Setter Property="BorderThickness" Value="0,0,1,1" />
                            <Setter Property="Padding" Value="12" />
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="FontFamily" Value="Segoe UI" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
        
    </Application.Resources>
    
</Application>
